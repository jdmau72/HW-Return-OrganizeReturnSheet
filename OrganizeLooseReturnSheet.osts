{"version":"0.3.0","body":"\nconst ADJ_COL = \"H\";\nconst F_COL = \"I\";\nconst T_COL = \"K\";\n\n// formula for getting associated value in other table:\n// =IF(ISBLANK(Main!I21)=FALSE, Main!I21, \"\")\n\n\nfunction main(workbook: ExcelScript.Workbook){\n  // Get the active cell and worksheet.\n  let selectedCell = workbook.getActiveCell();\n  let sheet = workbook.getFirstWorksheet();\n\n  \n  let adjSheet = sheet.copy(ExcelScript.WorksheetPositionType.after, sheet);\n  adjSheet.setName(\"ADJ IN\");\n  adjSheet.getUsedRange().clearAllConditionalFormats(); // need to clear, otherwise things break\n  organize_ADJ(adjSheet);\n\n\n\n  // trying to get every combination of values for transfer to and from\n  let fromColumn = sheet.getRange(`${F_COL}3:${F_COL}99`).getValues();\n  let toColumn = sheet.getRange(`${T_COL}3:${T_COL}99`).getValues();\n  \n  // iterates through the to and from column, concats, then checks if unique\n  let uniqueTransferNames: string[] = []\n  for (let i = 0; i < fromColumn.length; i++){\n      if (fromColumn[i][0].toString() !== \"\" && toColumn[i][0].toString() !== \"\"){\n        let transferName: string = fromColumn[i][0].toString() + \"_\" + toColumn[i][0].toString();\n      \n        if ((uniqueTransferNames.includes(transferName)) == false){\n          uniqueTransferNames.push(transferName);\n        }\n    }\n  }\n  console.log(uniqueTransferNames);\n\n  // for each unique combination of transfers (to & from),\n  // creates a new sheet\n  // then organizes that sheet\n  for (let i = 0; i < uniqueTransferNames.length; i++){\n    let tn = uniqueTransferNames[i].split(\"_\");\n    let tFrom = tn[0];\n    let tTo = tn[1];\n    // console.log(tFrom + \"   \" + tTo);\n\n  let transferSheet = sheet.copy(ExcelScript.WorksheetPositionType.after, sheet);\n  transferSheet.setName(tFrom + \" -> \" + tTo);\n  //transferSheet.getUsedRange().clearAllConditionalFormats(); // need to clear, otherwise things break\n  organize_Transfer(transferSheet, tFrom, tTo);\n\n  }\n}\n\nfunction organize_Transfer(sheet: ExcelScript.Worksheet, tFrom: string, tTo: string) {\n\n  let toColumn = sheet.getRange(`${T_COL}3:${T_COL}99`).getValues();\n  let fromColumn = sheet.getRange(`${F_COL}3:${F_COL}99`).getValues();\n  for (let row = 0; row < toColumn.length; row++) {\n    let toValue = toColumn[row][0].toString();\n    let fromValue = fromColumn[row][0].toString();\n\n\n    // gets entire row at that index\n    let currentItemRangeQuery: string = `A${row + 3}:L${row + 3} `;\n    let currentItemRange = sheet.getRange(currentItemRangeQuery)\n\n    // checks if the transfer From and transfer to fields are matching the parameters\n    if (!(toValue === tTo && fromValue === tFrom)) {\n      currentItemRange.clear();\n      currentItemRange.setRowHidden(true);\n    }\n  }\n}\n\n\nfunction organize_ADJ(sheet: ExcelScript.Worksheet){\n  \n  let checkedColumn = sheet.getRange(`${ADJ_COL}3:${ADJ_COL}99`).getValues();\n  for(let row = 0; row < checkedColumn.length; row++){\n    let cellValue = checkedColumn[row][0].toString();\n    //console.log(cellValue);\n    \n    // gets entire row at that index\n    let currentItemRangeQuery: string = `A${row+3}:L${row+3} `;\n    let currentItemRange = sheet.getRange(currentItemRangeQuery)\n\n    // if ADJ IN column empty, then will clear and hide the row\n    if (!(cellValue.toLowerCase() === \"y\" || cellValue.toLowerCase() === \"yes\")){\n      currentItemRange.clear();\n      currentItemRange.setRowHidden(true);\n    }\n  }  \n}\n\n\n\n\n  \n    \n\n\n\n\n","description":"Script takes all items of a certain category (MIA, EXTRA, FAIL, etc) and copies them to a separate sheet. Helps declutter and organize the sheet. ","noCodeMetadata":"","parameterInfo":"{\"version\":1,\"originalParameterOrder\":[],\"parameterSchema\":{\"type\":\"object\",\"default\":{},\"x-ms-visibility\":\"internal\"},\"returnSchema\":{\"type\":\"object\",\"properties\":{}},\"signature\":{\"comment\":\"\",\"parameters\":[{\"name\":\"workbook\",\"comment\":\"\"}]}}","apiInfo":"{\"variant\":\"synchronous\",\"variantVersion\":2}"}